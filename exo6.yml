
openapi: 3.0.0
info:
  title: UserProfile API
  version: 1.0.0
  description: Manage user profiles and sub-resources
servers:
  - url: http://localhost:8000
paths:
  /users/{id}:
    get:
      description: Get a user profile by ID
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users:
    post:
      description: Create new users (without IDs, generated by server)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
      responses:
        '201':
          description: Created users with IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
  /users/{id}/personalInfo:
    put:
      description: Update only personal information of a user
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users/{id}/address:
    put:
      description: Update only the address of a user
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
  /users/{id}/preferences:
    put:
      description: Update only the preferences of a user
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

components:
  parameters:
    id:
      name: id
      in: path
      required: true
      description: User identifier
      schema:
        type: string
      example: "usr123"
  schemas:
    UserProfile:
      allOf:
        - $ref: '#/components/schemas/CreateUserProfile'
        - type: object
          properties:
            identifier:
              type: string
    CreateUserProfile:
      type: object
      properties:
        personalInfo:
          $ref: '#/components/schemas/PersonalInfo'
        address:
          $ref: '#/components/schemas/Address'
        preferences:
          $ref: '#/components/schemas/Preferences'
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email
    Address:
      type: object
      properties:
        address_street:
          type: string
        address_city:
          type: string
        address_country:
          type: string
        address_postal_code:
          type: string
    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
        language:
          type: string
          enum: [mg, fr, eng]
